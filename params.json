{"name":"Intro","tagline":"Web pages for E(u)clid","body":"\r\n E(u)clid\r\n\r\n Version: Apr 2014\r\n Author:  Eldar Gaynetdinov\r\n License: ISC\r\n\r\n DESCRIPTION:\r\n ------------\r\n\r\n E(u)clid (further in text called Euclid) is the minimalist style framework \r\n which provides the following features:\r\n\r\n * event-driven engine based on epoll (SSL connections also supported)\r\n * client and limited server behaviour\r\n * buffering network IO\r\n * global and connection based timers\r\n * modularity\r\n * logging\r\n * limited support of HTTP 1.1 (permanent connections also supported)\r\n * fixed point arithmetic\r\n * YAML based config parser\r\n * linked lists, hash tables etc\r\n\r\n PHILOSOPHY:\r\n -----------\r\n\r\n Keep it thin. Don't use a lot of libraries except glibc.\r\n At the moment there are only three exeptions (OpenSSL, zlib, crc32).\r\n Provide enough functionality and scalability but stay in the minimalist style.\r\n\r\n WHY IT EXIST?\r\n -------------\r\n\r\n This is the public part of my personal project which I will use \r\n for algorithmic trading at NYSE, NASDAQ, CME etc.\r\n I don't like huge libraries and frameworks.\r\n That's why I decided to write this lightweight framework.\r\n I share it because somebody may find this framework interesting and useful.\r\n The name Euclid is inspired by Darren Aronofsky's film Pi.\r\n After I wrote event-driven engine I noticed similarity between \r\n (Eu)clid and (Ev)ent. That's why I call it E(u)clid.\r\n\r\n BUILD:\r\n ------\r\n\r\n You need a Linux environment with installed OpenSSL and zlib dev packages.\r\n\r\n 1) To build debug version:\r\n\r\n $ make\r\n\r\n 2) To build release version:\r\n\r\n $ make release\r\n\r\n 3) To build debug version which is intended for proxy module:\r\n\r\n $ make test_many_conns\r\n\r\n NOTE: http proxy module is intended for testing this framework.\r\n But I still didn't implement support for many connections.\r\n That means it's needed O(n) to traverse all the connections.\r\n That's why in normal mode, I don't support many connections.\r\n\r\n 4) To cleanup:\r\n\r\n $ make clean\r\n\r\n GETTING STARTED\r\n ---------------\r\n\r\n 1) $ make test_many_conns\r\n\r\n 2) point out your browser to: localhost:1111\r\n\r\n NOTE: http proxy supports SSL connections and HTTP method CONNECT.\r\n So it's possible to use this proxy for another protocols \r\n (try to use Pidgin IM through this proxy).\r\n\r\n 3) $ ./euclid module:proxy no_debug_log\r\n\r\n 4) Enjoy!\r\n\r\n To move logging to file. Invoke this before running ./euclid\r\n\r\n $ ./core/make_tmpfs_logging_dir.sh\r\n\r\n It creates a temporary directory in tmpfs. It's useful with debug logging.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}